/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    portalCircle: THREE.Mesh;
    lampLightL: THREE.Mesh;
    lampLightR: THREE.Mesh;
    baked: THREE.Mesh;
  };
  materials: {};
};

export function TestModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/portal-2.glb') as GLTFResult;
  const [color, setColor] = useState('pink');
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.portalCircle.geometry}
        material={nodes.portalCircle.material}
        position={[0, 0.78, 1.6]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lampLightL.geometry}
        material={nodes.lampLightL.material}
        position={[0.89, 1.07, -0.14]}
        scale={[0.07, 0.11, 0.07]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lampLightR.geometry}
        material={nodes.lampLightR.material}
        position={[-0.98, 1.07, -0.14]}
        scale={[-0.07, 0.11, 0.07]}
      />
      <mesh
        onClick={() => setColor('lightblue')}
        castShadow
        receiveShadow
        geometry={nodes.baked.geometry}
        material={nodes.baked.material}
        material-color={color}
        position={[0.9, 0.34, -1.47]}
        rotation={[0, 0.14, 0]}
      />
    </group>
  );
}

useGLTF.preload('/models/portal-2.glb');
